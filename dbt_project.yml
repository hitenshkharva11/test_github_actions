
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'Avalanche_finance_dbt'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  +snowflake_warehouse: "DBT_WH"  
  Avalanche_finance_dbt:
    ## By default let these roles see anything, unless explicitly revoked further down.
    +grants:
      +all: ['dbt_admin_role','ent_developer_role']
      +select: ['dbt_admin_role','ent_developer_role','looker_role']

    # Applies to all files under models
    engineering:
      materialized: view
      +schema: engineering

    oracle_base_tables:
      materialized: view
      +schema: oracle_base_tables

    plans:
      materialized: view
      +schema: plans   

    common_mappings:
      materialized: view
      +schema: common_mappings

    cs:
      materialized: view
      +schema: cs

    # sensitive models take care with creation and perms granting.
    jobvite:
      materialized: view
      jobvite_general:
        +schema: jobvite_general
        +grants:
          +all: ['dbt_admin_role','ent_hr_developer_role','ent_developer_role']
          +select: ['dbt_admin_role','ent_hr_developer_role','ent_developer_role','looker_role','ent_hr_analyst_role']
      jobvite_hr:
        +schema: jobvite_hr
        +grants:
          all: ['dbt_admin_role','ent_hr_developer_role']
          select: ['dbt_admin_role','ent_hr_developer_role','ent_hr_analyst_role']

    oracle_gl:
      materialized: view
      +schema: oracle_gl

    1_staging:
      materialized: view
      +schema: stg 
      +grants:
        all: ['dbt_admin_role','ent_developer_role']
        select: ['dbt_admin_role','ent_developer_role']

      metadata:
        materialized: view
        +schema: metadata

      adaptive_metadata:
        materialized: view
        +schema: adaptive
        +tags: fpa
        +grants:
          all: ['dbt_admin_role','ent_fpa_developer_role']
          select: ['dbt_admin_role','ent_fpa_developer_role']

      adaptive_s3:
        materialized: view
        +schema: adaptive
        +tags: fpa
        +grants:
          all: ['dbt_admin_role','ent_fpa_developer_role']
          select: ['dbt_admin_role','ent_fpa_developer_role']

      sharepoint_hr:
        materialized: view
        +schema: sharepoint_hr
        +tags: hr
        +grants:
          all: ['dbt_admin_role','ent_hr_developer_role']
          select: ['dbt_admin_role','ent_hr_developer_role']

      jobvite:
        tags: hr
        #Hidden on March-2023.  Unhide when senstive models are added.

        # generally_available:
        #   +grants:
        #     +all: ['dbt_admin_role','ent_hr_developer_role','ent_developer_role']
        #     +select: ['dbt_admin_role','ent_hr_developer_role','ent_developer_role','looker_role']
        
        restricted_permissions:
          +grants:
            all: ['dbt_admin_role','ent_hr_developer_role']
            select: ['dbt_admin_role','ent_hr_developer_role']

    2_intermediate:
      materialized: view
      +schema: int 

      forecast:
        materialized: view
        +schema: forecast
        +tags: fpa
        +grants:
          all: ['dbt_admin_role','ent_fpa_developer_role']
          select: ['dbt_admin_role','ent_fpa_developer_role']

    3_marts:
      materialized: table
      +meta:
        datafold:
          datadiff:
            slim_diff: diff_when_downstream
            
      core:
        materialized: table
        +schema: core

      forecast:
        materialized: view
        +schema: forecast
        +tags: fpa
        +grants:
          all: ['dbt_admin_role','ent_fpa_developer_role']
          select: ['dbt_admin_role','ent_fpa_developer_role', 'ent_fpa_analyst_role']

      technical_support:
        materialized: table
        +schema: technical_support

      hr:
        materialized: table
        +schema: hr
        +tags: hr
        +grants:
          all: ['dbt_admin_role','ent_hr_developer_role']
          select: ['dbt_admin_role','ent_hr_developer_role','ent_hr_analyst_role']
        
      accounting:
        materialized: table
        +schema: accounting

      finance:
        materialized: table
        +schema: finance
      
      oracle:
        materialized: table
        +schema: oracle

      oracle:
        materialized: table
        +schema: oracle

      monitoring:
        materialized: view
        schema: dbt_artifacts

      fpa_cs:
        schema: fpa_cs
        tags: fpa

  dbt_project_evaluator:
    +grants:
      +all: ['dbt_admin_role','ent_developer_role']
      +select: ['dbt_admin_role','ent_developer_role','looker_role']
    +enabled: "{{ (env_var('DBT_ENABLE_PROJECT_EVALUATOR',true)) | as_bool}}"
    marts:
      tests:
        # disable test coverage. PK always required, so 100%.
        fct_test_coverage:
          +enabled: false

  dbt_artifacts:
    +grants:
      +all: ['dbt_admin_role','ent_developer_role']
      +select: ['dbt_admin_role','ent_developer_role','looker_role']
    +schema: dbt_artifacts
    staging:
      +schema: stg
    sources:
      +schema: src

seeds:
  Avalanche_finance_dbt:
    # Applies to all files under seeds
    ## By default let these roles see anything, unless explicitly revoked further down.
    +grants:
      +all: ['dbt_admin_role','ent_developer_role']
      +select: ['dbt_admin_role','ent_developer_role','looker_role']
    av_common_mappings:
      +schema: common_mappings

  dbt_project_evaluator:
    dbt_project_evaluator_exceptions:
      +enabled: false

vars:

  dbt_project_evaluator:
    dbt_project_evaluator_exceptions:
      +enabled: false
    staging_prefixes: ['stg_', 'base_','generate_','get_']
    staging_folder_name: 1_staging
    intermediate_folder_name: 2_intermediate
    marts_folder_name: 3_marts
    chained_views_threshold: 7
    models_fanout_threshold: 7
    exclude_paths_from_project: ["(^models)\/(common_mappings|cs|engineering|jobvite|oracle_base_tables|oracle_gl|plans|sources)"]
    exclude_packages: ["dbt_artifacts"]

tests:
  dbt_project_evaluator:
    +severity: "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'warn') }}"

# Hooks
on-run-start:
    - "{{ use_secondary_role() }}"

on-run-end: 
    - "{% if env_var('DBT_ENABLE_ARTIFACTS') == 'True' %}{{ dbt_artifacts.upload_results(results) }}{% endif %}"
    - "{{ grant_usage_on_schemas_where_select() }}"